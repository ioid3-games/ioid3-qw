Index: code/botlib/be_aas_file.c
===================================================================
--- code/botlib/be_aas_file.c	(revision 3381)
+++ code/botlib/be_aas_file.c	(working copy)
@@ -381,7 +381,8 @@
 	{
 		AAS_DData((unsigned char *) &header + 8, sizeof(aas_header_t) - 8);
 	} //end if
-	//
+// Tobias HACK: temporarely stop checking AAS/BSP checksums
+/*
 	aasworld.bspchecksum = atoi(LibVarGetString( "sv_mapChecksum"));
 	if (LittleLong(header.bspchecksum) != aasworld.bspchecksum)
 	{
@@ -389,6 +390,8 @@
 		botimport.FS_FCloseFile(fp);
 		return BLERR_WRONGAASFILEVERSION;
 	} //end if
+*/
+// Tobias END
 	//load the lumps:
 	//bounding boxes
 	offset = LittleLong(header.lumps[AASLUMP_BBOXES].fileofs);
Index: code/cgame/cg_players.c
===================================================================
--- code/cgame/cg_players.c	(revision 3381)
+++ code/cgame/cg_players.c	(working copy)
@@ -65,7 +65,7 @@
 		}
 	}
 
-	CG_Error( "Unknown custom sound: %s", soundName );
+	//CG_Error( "Unknown custom sound: %s", soundName ); // Tobias HACK: make missing custom sounds non-fatal for the moment
 	return 0;
 }
 
Index: code/qcommon/cm_load.c
===================================================================
--- code/qcommon/cm_load.c	(revision 3381)
+++ code/qcommon/cm_load.c	(working copy)
@@ -604,7 +604,7 @@
 		((int *)&header)[i] = LittleLong ( ((int *)&header)[i]);
 	}
 
-	if ( header.version != BSP_VERSION ) {
+	if (header.version != BSP_VERSION && header.version != WOLF_BSP_VERSION) { // Tobias HACK: temporarely stop checking AAS/BSP checksums
 		Com_Error (ERR_DROP, "CM_LoadMap: %s has wrong version number (%i should be %i)"
 		, name, header.version, BSP_VERSION );
 	}
Index: code/qcommon/qfiles.h
===================================================================
--- code/qcommon/qfiles.h	(revision 3381)
+++ code/qcommon/qfiles.h	(working copy)
@@ -313,8 +313,8 @@
 		// little-endian "IBSP"
 
 #define BSP_VERSION			46
+#define WOLF_BSP_VERSION	47 // RTCW/WolfET // Tobias HACK: temporarely stop checking AAS/BSP checksums
 
-
 // there shouldn't be any problem with increasing these values at the
 // expense of more memory allocation in the utilities
 #define	MAX_MAP_MODELS		0x400
Index: code/renderergl1/tr_bsp.c
===================================================================
--- code/renderergl1/tr_bsp.c	(revision 3381)
+++ code/renderergl1/tr_bsp.c	(working copy)
@@ -3125,7 +3125,7 @@
 	fileBase = (byte *)header;
 
 	i = LittleLong (header->version);
-	if ( i != BSP_VERSION ) {
+	if ( i != BSP_VERSION && i != WOLF_BSP_VERSION ) { // Tobias HACK: temporarely stop checking AAS/BSP checksums
 		ri.Error (ERR_DROP, "RE_LoadWorldMap: %s has wrong version number (%i should be %i)", 
 			name, i, BSP_VERSION);
 	}
Index: code/renderergl2/tr_bsp.c
===================================================================
--- code/renderergl2/tr_bsp.c	(revision 3381)
+++ code/renderergl2/tr_bsp.c	(working copy)
@@ -3125,7 +3125,7 @@
 	fileBase = (byte *)header;
 
 	i = LittleLong (header->version);
-	if ( i != BSP_VERSION ) {
+	if ( i != BSP_VERSION && i != WOLF_BSP_VERSION ) { // Tobias HACK: temporarely stop checking AAS/BSP checksums
 		ri.Error (ERR_DROP, "RE_LoadWorldMap: %s has wrong version number (%i should be %i)", 
 			name, i, BSP_VERSION);
 	}
