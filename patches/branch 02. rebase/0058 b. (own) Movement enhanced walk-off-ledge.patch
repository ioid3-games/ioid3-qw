Index: code/botlib/be_ai_move.c
===================================================================
--- code/botlib/be_ai_move.c	(revision 3378)
+++ code/botlib/be_ai_move.c	(working copy)
@@ -1658,9 +1658,11 @@
 //===========================================================================
 bot_moveresult_t BotTravel_WalkOffLedge(bot_movestate_t *ms, aas_reachability_t *reach)
 {
-	vec3_t hordir, dir;
+	vec3_t hordir, dir, cmdmove, velocity;
 	float dist, speed, reachhordist;
+	int gapdist;
 	bot_moveresult_t_cleared( result );
+	aas_clientmove_t move;
 
 	//check if the bot is blocked by anything
 	VectorSubtract(reach->start, ms->origin, dir);
@@ -1676,42 +1678,57 @@
 	hordir[2] = 0;
 	dist = VectorNormalize(hordir);
 	//if pretty close to the start focus on the reachability end
-	if (dist < 48)
+	if (dist < 64)
 	{
 		hordir[0] = reach->end[0] - ms->origin[0];
 		hordir[1] = reach->end[1] - ms->origin[1];
 		hordir[2] = 0;
 		VectorNormalize(hordir);
 		//
+		// get command movement
+		VectorScale(hordir, 400, cmdmove);
+		VectorCopy(ms->velocity, velocity);
+
+		AAS_PredictClientMovement(&move, ms->entitynum, reach->end, PRESENCE_NORMAL, qtrue, velocity, cmdmove, 2, 2, 0.1f, SE_HITGROUNDDAMAGE|SE_ENTERSLIME|SE_ENTERLAVA|SE_TOUCHJUMPPAD, 0, qfalse); //qtrue
+		// check for nearby gap behind the current ledge
+		gapdist = BotGapDistance(reach->end, hordir, 400, ms->entitynum);
+		// if there is no gap under the current ledge
 		if (reachhordist < 20)
 		{
-			speed = 100;
+			// if there is a jumpad, lava or slime under the current ledge or if the bot is walking
+			if (move.stopevent & (SE_HITGROUNDDAMAGE|SE_ENTERSLIME|SE_ENTERLAVA|SE_TOUCHJUMPPAD) || ms->moveflags & MFL_WALK) {
+				speed = 200;
+			// if there is a gap or a ledge behind the current ledge (like a cascade)
+			} else if (gapdist > 0) {
+				if (gapdist < 48) {
+					speed = 400 - (300 - gapdist * 0.75);
+				} else {
+					speed = 400 - (200 - gapdist * 0.5);
+				}
+			} else {
+				speed = 400;
+			}
 		} //end if
 		else if (!AAS_HorizontalVelocityForJump(0, reach->start, reach->end, &speed))
 		{
 			speed = 400;
 		} //end if
-	} //end if
-	else
-	{
-		if (reachhordist < 20)
+		else // if there is a gap under the current ledge
 		{
-			if (dist > 64) dist = 64;
-
-			if (ms->moveflags & MFL_WALK) {
-				speed = 200 - (128 - 2 * dist);
+			// if there is a gap or a ledge behind the current ledge (like a cascade)
+			if (gapdist > 0) {
+				speed = 400 - (300 - gapdist * 0.75);
 			} else {
-				speed = 400 - (256 - 4 * dist);
+				speed = 400;
 			}
 		} //end if
-		else
-		{
-			if (ms->moveflags & MFL_WALK) {
-				speed = 200;
-			} else {
-				speed = 400;
-			}
-		} //end else
+	} //end if
+	else
+	{
+		if (ms->moveflags & MFL_WALK) {
+			speed = 200;
+		} else {
+			speed = 400;
+		}
 	} //end else
 	//
 	BotCheckBlocked(ms, hordir, qtrue, &result);
