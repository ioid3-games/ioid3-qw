Index: code/cgame/cg_local.h
===================================================================
--- code/cgame/cg_local.h	(revision 3359)
+++ code/cgame/cg_local.h	(working copy)
@@ -1513,11 +1513,6 @@
 // are processed
 void		trap_SendConsoleCommand( const char *text );
 
-// register a command name so the console can perform command completion.
-// FIXME: replace this with a normal console command "defineCommand"?
-void		trap_AddCommand( const char *cmdName );
-void		trap_RemoveCommand( const char *cmdName );
-
 // send a string to the server over the network
 void		trap_SendClientCommand( const char *s );
 
Index: code/client/cl_ui.c
===================================================================
--- code/client/cl_ui.c	(revision 3359)
+++ code/client/cl_ui.c	(working copy)
@@ -703,6 +703,15 @@
 
 /*
 ====================
+CL_AddUICommand
+====================
+*/
+void CL_AddUICommand( const char *cmdName ) {
+	Cmd_AddCommand( cmdName, NULL );
+}
+
+/*
+====================
 FloatAsInt
 ====================
 */
@@ -763,6 +772,14 @@
 		Cvar_Register( NULL, VMA(1), VMA(2), args[3] );
 		return 0;
 
+	case UI_ADDCOMMAND:
+		CL_AddUICommand(VMA(1));
+		return 0;
+
+	case UI_REMOVECOMMAND:
+		Cmd_RemoveCommandSafe(VMA(1));
+		return 0;
+
 	case UI_CVAR_INFOSTRINGBUFFER:
 		Cvar_InfoStringBuffer( args[1], VMA(2), args[3] );
 		return 0;
Index: code/game/bg_lib.c
===================================================================
--- code/game/bg_lib.c	(revision 3359)
+++ code/game/bg_lib.c	(working copy)
@@ -2109,6 +2109,10 @@
 			*s++ = '\0';
 			break;
 			}
+
+		default:
+			Com_Printf("WARNING: bg_lib.c's sscanf doesn't support format %%%c\n", cmd);
+			break;
 		}
 	}
 
@@ -2116,4 +2120,26 @@
 	return count;
 }
 
+void *bsearch( const void *key, const void *base, size_t nmemb, size_t size,
+               cmp_t *compar )
+{
+  size_t low = 0, high = nmemb, mid;
+  int    comp;
+  void   *ptr;
+
+  while( low < high )
+  {
+    mid = low + (high - low) / 2;
+    ptr = (void *)((char *)base + ( mid * size ));
+    comp = compar (key, ptr);
+    if( comp < 0 )
+      high = mid;
+    else if( comp > 0 )
+      low = mid + 1;
+    else
+      return ptr;
+  }
+  return NULL;
+}
+
 #endif
Index: code/game/bg_lib.h
===================================================================
--- code/game/bg_lib.h	(revision 3359)
+++ code/game/bg_lib.h	(working copy)
@@ -81,6 +81,8 @@
 void qsort(void *a, size_t n, size_t es, cmp_t *cmp);
 void	srand( unsigned seed );
 int		rand( void );
+void        *bsearch( const void *key, const void *base, size_t nmemb,
+                      size_t size, cmp_t *compar );
 
 // String functions
 size_t strlen( const char *string );
Index: code/game/bg_misc.c
===================================================================
--- code/game/bg_misc.c	(revision 3359)
+++ code/game/bg_misc.c	(working copy)
@@ -1608,3 +1608,9 @@
 	s->loopSound = ps->loopSound;
 	s->generic1 = ps->generic1;
 }
+
+
+int cmdcmp( const void *a, const void *b )
+{
+  return Q_stricmp( (const char *)a, ((dummyCmd_t *)b)->name );
+}
Index: code/game/bg_public.h
===================================================================
--- code/game/bg_public.h	(revision 3359)
+++ code/game/bg_public.h	(working copy)
@@ -736,3 +736,12 @@
 #define KAMI_BOOMSPHERE_MAXRADIUS		720
 #define KAMI_SHOCKWAVE2_MAXRADIUS		704
 
+
+typedef struct
+{
+  const char *name;
+} dummyCmd_t;
+int cmdcmp( const void *a, const void *b );
+// register a command name so the console can perform command completion.
+void trap_AddCommand(const char *cmdName);
+void trap_RemoveCommand(const char *cmdName);
Index: code/game/g_local.h
===================================================================
--- code/game/g_local.h	(revision 3359)
+++ code/game/g_local.h	(working copy)
@@ -578,7 +578,9 @@
 //
 // g_svcmds.c
 //
-qboolean	ConsoleCommand( void );
+qboolean	G_ConsoleCommand( void );
+void      G_RegisterCommands( void );
+void      G_UnregisterCommands( void );
 void G_ProcessIPBans(void);
 qboolean G_FilterPacket (char *from);
 
@@ -593,6 +595,7 @@
 //
 // g_cmds.c
 //
+char      *ConcatArgs( int start );
 void DeathmatchScoreboardMessage( gentity_t *ent );
 
 //
Index: code/game/g_main.c
===================================================================
--- code/game/g_main.c	(revision 3359)
+++ code/game/g_main.c	(working copy)
@@ -228,7 +228,7 @@
 		G_RunFrame( arg0 );
 		return 0;
 	case GAME_CONSOLE_COMMAND:
-		return ConsoleCommand();
+		return G_ConsoleCommand();
 	case BOTAI_START_FRAME:
 		return BotAIStartFrame( arg0 );
 	}
@@ -448,6 +448,7 @@
 	}
 
 	G_InitWorldSession();
+	G_RegisterCommands();
 
 	// initialize all entities for this game
 	memset( g_entities, 0, MAX_GENTITIES * sizeof(g_entities[0]) );
@@ -534,6 +535,8 @@
 	if ( trap_Cvar_VariableIntegerValue( "bot_enable" ) ) {
 		BotAIShutdown( restart );
 	}
+
+	G_UnregisterCommands();
 }
 
 
Index: code/game/g_public.h
===================================================================
--- code/game/g_public.h	(revision 3359)
+++ code/game/g_public.h	(working copy)
@@ -130,7 +130,8 @@
 	// ClientCommand and ServerCommand parameter access
 
 	G_ARGV,			// ( int n, char *buffer, int bufferLength );
-
+	G_ADDCOMMAND,				// (const char *cmdName);
+	G_REMOVECOMMAND,			// (const char *cmdName);
 	G_FS_FOPEN_FILE,	// ( const char *qpath, fileHandle_t *file, fsMode_t mode );
 	G_FS_READ,		// ( void *buffer, int len, fileHandle_t f );
 	G_FS_WRITE,		// ( const void *buffer, int len, fileHandle_t f );
Index: code/game/g_svcmds.c
===================================================================
--- code/game/g_svcmds.c	(revision 3359)
+++ code/game/g_svcmds.c	(working copy)
@@ -440,74 +440,93 @@
 	SetTeam( &g_entities[cl - level.clients], str );
 }
 
-char	*ConcatArgs( int start );
-
 /*
 =================
-ConsoleCommand
-
+Svcmd_ListIPs_f
 =================
 */
-qboolean	ConsoleCommand( void ) {
-	char	cmd[MAX_TOKEN_CHARS];
-
-	trap_Argv( 0, cmd, sizeof( cmd ) );
-
-	if ( Q_stricmp (cmd, "entitylist") == 0 ) {
-		Svcmd_EntityList_f();
-		return qtrue;
-	}
-
-	if ( Q_stricmp (cmd, "forceteam") == 0 ) {
-		Svcmd_ForceTeam_f();
-		return qtrue;
-	}
-
-	if (Q_stricmp (cmd, "game_memory") == 0) {
-		Svcmd_GameMem_f();
-		return qtrue;
-	}
-
-	if (Q_stricmp (cmd, "addbot") == 0) {
-		Svcmd_AddBot_f();
-		return qtrue;
-	}
-
-	if (Q_stricmp (cmd, "botlist") == 0) {
-		Svcmd_BotList_f();
-		return qtrue;
-	}
-
-	if (Q_stricmp (cmd, "abort_podium") == 0) {
-		Svcmd_AbortPodium_f();
-		return qtrue;
-	}
-
-	if (Q_stricmp (cmd, "addip") == 0) {
-		Svcmd_AddIP_f();
-		return qtrue;
-	}
-
-	if (Q_stricmp (cmd, "removeip") == 0) {
-		Svcmd_RemoveIP_f();
-		return qtrue;
-	}
-
-	if (Q_stricmp (cmd, "listip") == 0) {
-		trap_SendConsoleCommand( EXEC_NOW, "g_banIPs\n" );
-		return qtrue;
-	}
-
-	if (g_dedicated.integer) {
-		if (Q_stricmp (cmd, "say") == 0) {
-			trap_SendServerCommand( -1, va("print \"server: %s\n\"", ConcatArgs(1) ) );
-			return qtrue;
-		}
-		// everything else will also be printed as a say command
-		trap_SendServerCommand( -1, va("print \"server: %s\n\"", ConcatArgs(0) ) );
-		return qtrue;
-	}
-
-	return qfalse;
+void	Svcmd_ListIPs_f( void ) {
+	trap_SendConsoleCommand( EXEC_NOW, "g_banIPs\n" );
 }
 
+struct svcmd
+{
+  char     *cmd;
+  qboolean dedicated;
+  void     ( *function )( void );
+} svcmds[ ] = {
+	{ "abort_podium", qfalse, Svcmd_AbortPodium_f },
+	{ "addbot", qfalse, Svcmd_AddBot_f },
+	{ "addip", qfalse, Svcmd_AddIP_f },
+	{ "botlist", qfalse, Svcmd_BotList_f },
+	{ "entitylist", qfalse, Svcmd_EntityList_f },
+	{ "forceteam", qfalse, Svcmd_ForceTeam_f},
+	{ "game_memory", qfalse, Svcmd_GameMem_f },
+	{ "listip", qfalse, Svcmd_ListIPs_f },
+	{ "removeip", qfalse, Svcmd_RemoveIP_f },
+};
+
+const size_t numSvCmds = ARRAY_LEN(svcmds);
+
+/*
+=================
+G_ConsoleCommand
+
+=================
+*/
+qboolean	G_ConsoleCommand( void ) {
+	char	cmd[MAX_TOKEN_CHARS];
+	struct	svcmd *command;
+
+	trap_Argv( 0, cmd, sizeof( cmd ) );
+
+	command = bsearch( cmd, svcmds, numSvCmds, sizeof( struct svcmd ), cmdcmp );
+
+	if( !command )
+	{
+		if( g_dedicated.integer )
+			G_Printf( "unknown command: %s\n", cmd );
+
+		return qfalse;
+	}
+
+	if( command->dedicated && !g_dedicated.integer )
+		return qfalse;
+
+	command->function( );
+	return qtrue;
+}
+
+/*
+=================
+G_RegisterCommands
+=================
+*/
+void G_RegisterCommands( void )
+{
+	int i;
+
+	for( i = 0; i < numSvCmds; i++ )
+	{
+		if( svcmds[ i ].dedicated && !g_dedicated.integer )
+			continue;
+		trap_AddCommand( svcmds[ i ].cmd );
+	}
+}
+
+/*
+=================
+G_UnregisterCommands
+=================
+*/
+void G_UnregisterCommands( void )
+{
+  int i;
+ 
+	for( i = 0; i < numSvCmds; i++ )
+	{
+		if( svcmds[ i ].dedicated && !g_dedicated.integer )
+			continue;
+		trap_RemoveCommand( svcmds[ i ].cmd );
+	}
+}
Index: code/game/g_syscalls.asm
===================================================================
--- code/game/g_syscalls.asm	(revision 3359)
+++ code/game/g_syscalls.asm	(working copy)
@@ -10,42 +10,44 @@
 equ	trap_Cvar_VariableStringBuffer	-8
 equ	trap_Argc				-9
 equ	trap_Argv				-10
-equ	trap_FS_FOpenFile		-11
-equ	trap_FS_Read			-12
-equ	trap_FS_Write			-13
-equ	trap_FS_FCloseFile		-14
-equ	trap_SendConsoleCommand	-15
-equ	trap_LocateGameData		-16
-equ	trap_DropClient			-17
-equ	trap_SendServerCommand	-18
-equ	trap_SetConfigstring	-19
-equ	trap_GetConfigstring	-20
-equ	trap_GetUserinfo		-21
-equ	trap_SetUserinfo		-22
-equ	trap_GetServerinfo		-23
-equ	trap_SetBrushModel		-24
-equ	trap_Trace				-25
-equ	trap_PointContents		-26
-equ trap_InPVS				-27
-equ	trap_InPVSIgnorePortals	-28
-equ	trap_AdjustAreaPortalState	-29
-equ	trap_AreasConnected		-30
-equ	trap_LinkEntity			-31
-equ	trap_UnlinkEntity		-32
-equ	trap_EntitiesInBox		-33
-equ	trap_EntityContact		-34
-equ	trap_BotAllocateClient	-35
-equ	trap_BotFreeClient		-36
-equ	trap_GetUsercmd			-37
-equ	trap_GetEntityToken		-38
-equ	trap_FS_GetFileList		-39
-equ trap_DebugPolygonCreate	-40
-equ trap_DebugPolygonDelete	-41
-equ trap_RealTime			-42
-equ trap_SnapVector			-43
-equ trap_TraceCapsule		-44
-equ trap_EntityContactCapsule	-45
-equ trap_FS_Seek -46
+equ trap_AddCommand			-11
+equ trap_RemoveCommand		-12
+equ	trap_FS_FOpenFile		-13
+equ	trap_FS_Read			-14
+equ	trap_FS_Write			-15
+equ	trap_FS_FCloseFile		-16
+equ	trap_SendConsoleCommand	-17
+equ	trap_LocateGameData		-18
+equ	trap_DropClient			-19
+equ	trap_SendServerCommand	-20
+equ	trap_SetConfigstring	-21
+equ	trap_GetConfigstring	-22
+equ	trap_GetUserinfo		-23
+equ	trap_SetUserinfo		-24
+equ	trap_GetServerinfo		-25
+equ	trap_SetBrushModel		-26
+equ	trap_Trace				-27
+equ	trap_PointContents		-28
+equ trap_InPVS				-29
+equ	trap_InPVSIgnorePortals	-30
+equ	trap_AdjustAreaPortalState	-31
+equ	trap_AreasConnected		-32
+equ	trap_LinkEntity			-33
+equ	trap_UnlinkEntity		-34
+equ	trap_EntitiesInBox		-35
+equ	trap_EntityContact		-36
+equ	trap_BotAllocateClient	-37
+equ	trap_BotFreeClient		-38
+equ	trap_GetUsercmd			-39
+equ	trap_GetEntityToken		-40
+equ	trap_FS_GetFileList		-41
+equ trap_DebugPolygonCreate	-42
+equ trap_DebugPolygonDelete	-43
+equ trap_RealTime			-44
+equ trap_SnapVector			-45
+equ trap_TraceCapsule		-46
+equ trap_EntityContactCapsule	-47
+equ trap_FS_Seek -48
 
 equ	memset					-101
 equ	memcpy					-102
Index: code/game/g_syscalls.c
===================================================================
--- code/game/g_syscalls.c	(revision 3359)
+++ code/game/g_syscalls.c	(working copy)
@@ -63,6 +63,14 @@
 	syscall( G_ARGV, n, buffer, bufferLength );
 }
 
+void	trap_AddCommand( const char *cmdName ) {
+	syscall( G_ADDCOMMAND, cmdName );
+}
+
+void	trap_RemoveCommand( const char *cmdName ) {
+	syscall( G_REMOVECOMMAND, cmdName );
+}
+
 int		trap_FS_FOpenFile( const char *qpath, fileHandle_t *f, fsMode_t mode ) {
 	return syscall( G_FS_FOPEN_FILE, qpath, f, mode );
 }
Index: code/server/sv_game.c
===================================================================
--- code/server/sv_game.c	(revision 3359)
+++ code/server/sv_game.c	(working copy)
@@ -318,6 +318,15 @@
 	case G_ARGV:
 		Cmd_ArgvBuffer( args[1], VMA(2), args[3] );
 		return 0;
+
+	case G_ADDCOMMAND:
+		Cmd_AddCommand( VMA(1), NULL );
+		return 0;
+
+	case G_REMOVECOMMAND:
+		Cmd_RemoveCommandSafe( VMA(1) );
+		return 0;
+
 	case G_SEND_CONSOLE_COMMAND:
 		Cbuf_ExecuteText( args[1], VMA(2) );
 		return 0;
Index: code/ui/ui_public.h
===================================================================
--- code/ui/ui_public.h	(revision 3359)
+++ code/ui/ui_public.h	(working copy)
@@ -44,6 +44,8 @@
 	UI_CVAR_SETVALUE,
 	UI_CVAR_RESET,
 	UI_CVAR_CREATE,
+	UI_ADDCOMMAND,
+	UI_REMOVECOMMAND,
 	UI_CVAR_INFOSTRINGBUFFER,
 	UI_ARGC,
 	UI_ARGV,
Index: code/ui/ui_syscalls.asm
===================================================================
--- code/ui/ui_syscalls.asm	(revision 3359)
+++ code/ui/ui_syscalls.asm	(working copy)
@@ -12,82 +12,84 @@
 equ	trap_Cvar_InfoStringBuffer				-10
 equ	trap_Argc								-11
 equ	trap_Argv								-12
-equ	trap_Cmd_ExecuteText					-13
-equ	trap_FS_FOpenFile						-14
-equ	trap_FS_Read							-15
-equ	trap_FS_Write							-16
-equ	trap_FS_FCloseFile						-17
-equ	trap_FS_GetFileList						-18
-equ	trap_R_RegisterModel					-19
-equ	trap_R_RegisterSkin						-20
-equ	trap_R_RegisterShaderNoMip				-21
-equ	trap_R_ClearScene						-22
-equ	trap_R_AddRefEntityToScene				-23
-equ	trap_R_AddPolyToScene					-24
-equ	trap_R_AddLightToScene					-25
-equ	trap_R_RenderScene						-26
-equ	trap_R_SetColor							-27
-equ	trap_R_DrawStretchPic					-28
-equ	trap_UpdateScreen						-29
-equ	trap_CM_LerpTag							-30
-equ	trap_CM_LoadModel						-31
-equ	trap_S_RegisterSound					-32
-equ	trap_S_StartLocalSound					-33
-equ	trap_Key_KeynumToStringBuf				-34
-equ	trap_Key_GetBindingBuf					-35
-equ	trap_Key_SetBinding						-36
-equ	trap_Key_IsDown							-37
-equ	trap_Key_GetOverstrikeMode				-38
-equ	trap_Key_SetOverstrikeMode				-39
-equ	trap_Key_ClearStates					-40
-equ	trap_Key_GetCatcher						-41
-equ	trap_Key_SetCatcher						-42        
-equ	trap_GetClipboardData					-43
-equ	trap_GetGlconfig						-44
-equ	trap_GetClientState						-45
-equ	trap_GetConfigString					-46
-equ	trap_LAN_GetPingQueueCount				-47
-equ	trap_LAN_ClearPing						-48
-equ	trap_LAN_GetPing						-49
-equ	trap_LAN_GetPingInfo					-50
-equ	trap_Cvar_Register						-51
-equ trap_Cvar_Update						-52
-equ trap_MemoryRemaining					-53
-equ	trap_GetCDKey							-54
-equ	trap_SetCDKey							-55
-equ trap_R_RegisterFont						-56
-equ trap_R_ModelBounds						-57
-equ trap_PC_AddGlobalDefine					-58
-equ	trap_PC_LoadSource						-59
-equ trap_PC_FreeSource						-60
-equ trap_PC_ReadToken						-61
-equ trap_PC_SourceFileAndLine				-62
-equ trap_S_StopBackgroundTrack				-63
-equ trap_S_StartBackgroundTrack				-64
-equ trap_RealTime							-65
-equ trap_LAN_GetServerCount					-66
-equ trap_LAN_GetServerAddressString			-67
-equ trap_LAN_GetServerInfo					-68
-equ trap_LAN_MarkServerVisible 				-69
-equ trap_LAN_UpdateVisiblePings				-70
-equ trap_LAN_ResetPings						-71
-equ trap_LAN_LoadCachedServers				-72
-equ trap_LAN_SaveCachedServers				-73
-equ trap_LAN_AddServer						-74
-equ trap_LAN_RemoveServer	 				-75
-equ trap_CIN_PlayCinematic					-76
-equ trap_CIN_StopCinematic					-77
-equ trap_CIN_RunCinematic 					-78
-equ trap_CIN_DrawCinematic					-79
-equ trap_CIN_SetExtents						-80
-equ trap_R_RemapShader						-81
-equ trap_VerifyCDKey						-82
-equ trap_LAN_ServerStatus					-83
-equ trap_LAN_GetServerPing					-84
-equ trap_LAN_ServerIsVisible				-85
-equ trap_LAN_CompareServers					-86
-equ trap_FS_Seek		-87
-equ trap_SetPbClStatus -88
+equ trap_AddCommand							-13
+equ trap_RemoveCommand						-14
+equ	trap_Cmd_ExecuteText					-15
+equ	trap_FS_FOpenFile						-16
+equ	trap_FS_Read							-17
+equ	trap_FS_Write							-18
+equ	trap_FS_FCloseFile						-19
+equ	trap_FS_GetFileList						-20
+equ	trap_R_RegisterModel					-21
+equ	trap_R_RegisterSkin						-22
+equ	trap_R_RegisterShaderNoMip				-23
+equ	trap_R_ClearScene						-24
+equ	trap_R_AddRefEntityToScene				-25
+equ	trap_R_AddPolyToScene					-26
+equ	trap_R_AddLightToScene					-27
+equ	trap_R_RenderScene						-28
+equ	trap_R_SetColor							-29
+equ	trap_R_DrawStretchPic					-30
+equ	trap_UpdateScreen						-31
+equ	trap_CM_LerpTag							-32
+equ	trap_CM_LoadModel						-33
+equ	trap_S_RegisterSound					-34
+equ	trap_S_StartLocalSound					-35
+equ	trap_Key_KeynumToStringBuf				-36
+equ	trap_Key_GetBindingBuf					-37
+equ	trap_Key_SetBinding						-38
+equ	trap_Key_IsDown							-39
+equ	trap_Key_GetOverstrikeMode				-40
+equ	trap_Key_SetOverstrikeMode				-41
+equ	trap_Key_ClearStates					-42
+equ	trap_Key_GetCatcher						-43
+equ	trap_Key_SetCatcher						-44
+equ	trap_GetClipboardData					-45
+equ	trap_GetGlconfig						-46
+equ	trap_GetClientState						-47
+equ	trap_GetConfigString					-48
+equ	trap_LAN_GetPingQueueCount				-49
+equ	trap_LAN_ClearPing						-50
+equ	trap_LAN_GetPing						-51
+equ	trap_LAN_GetPingInfo					-52
+equ	trap_Cvar_Register						-53
+equ trap_Cvar_Update						-54
+equ trap_MemoryRemaining					-55
+equ	trap_GetCDKey							-56
+equ	trap_SetCDKey							-57
+equ trap_R_RegisterFont						-58
+equ trap_R_ModelBounds						-59
+equ trap_PC_AddGlobalDefine					-60
+equ	trap_PC_LoadSource						-61
+equ trap_PC_FreeSource						-62
+equ trap_PC_ReadToken						-63
+equ trap_PC_SourceFileAndLine				-64
+equ trap_S_StopBackgroundTrack				-65
+equ trap_S_StartBackgroundTrack				-66
+equ trap_RealTime							-67
+equ trap_LAN_GetServerCount					-68
+equ trap_LAN_GetServerAddressString			-69
+equ trap_LAN_GetServerInfo					-70
+equ trap_LAN_MarkServerVisible 				-71
+equ trap_LAN_UpdateVisiblePings				-72
+equ trap_LAN_ResetPings						-73
+equ trap_LAN_LoadCachedServers				-74
+equ trap_LAN_SaveCachedServers				-75
+equ trap_LAN_AddServer						-76
+equ trap_LAN_RemoveServer	 				-77
+equ trap_CIN_PlayCinematic					-78
+equ trap_CIN_StopCinematic					-79
+equ trap_CIN_RunCinematic 					-80
+equ trap_CIN_DrawCinematic					-81
+equ trap_CIN_SetExtents						-82
+equ trap_R_RemapShader						-83
+equ trap_VerifyCDKey						-84
+equ trap_LAN_ServerStatus					-85
+equ trap_LAN_GetServerPing					-86
+equ trap_LAN_ServerIsVisible				-87
+equ trap_LAN_CompareServers					-88
+equ trap_FS_Seek		-89
+equ trap_SetPbClStatus -90
 
 equ	memset						-101
 equ	memcpy						-102
Index: code/ui/ui_syscalls.c
===================================================================
--- code/ui/ui_syscalls.c	(revision 3359)
+++ code/ui/ui_syscalls.c	(working copy)
@@ -101,6 +101,14 @@
 	syscall( UI_ARGV, n, buffer, bufferLength );
 }
 
+void trap_AddCommand(const char *cmdName) {
+	syscall(UI_ADDCOMMAND, cmdName);
+}
+
+void trap_RemoveCommand(const char *cmdName) {
+	syscall(UI_REMOVECOMMAND, cmdName);
+}
+
 void trap_Cmd_ExecuteText( int exec_when, const char *text ) {
 	syscall( UI_CMD_EXECUTETEXT, exec_when, text );
 }
