Index: code/botlib/be_aas.h
===================================================================
--- code/botlib/be_aas.h	(revision 3422)
+++ code/botlib/be_aas.h	(working copy)
@@ -130,7 +130,6 @@
 	int		number;			// number of the entity
 	vec3_t	origin;			// origin of the entity
 	vec3_t	angles;			// angles of the model
-	vec3_t	old_origin;		// for lerping
 	vec3_t	lastvisorigin;	// last visible origin
 	vec3_t	mins;			// bounding box minimums
 	vec3_t	maxs;			// bounding box maximums
Index: code/botlib/be_aas_bspq3.c
===================================================================
--- code/botlib/be_aas_bspq3.c	(revision 3422)
+++ code/botlib/be_aas_bspq3.c	(working copy)
@@ -38,15 +38,9 @@
 #include "botlib.h"
 #include "be_aas.h"
 #include "be_aas_funcs.h"
+#include "be_interface.h"
 #include "be_aas_def.h"
 
-extern botlib_import_t botimport;
-
-//#define TRACE_DEBUG
-
-#define ON_EPSILON		0.005
-//#define DEG2RAD( a ) (( a * M_PI ) / 180.0F)
-
 #define MAX_BSPENTITIES		2048
 
 typedef struct rgb_s
Index: code/botlib/be_aas_debug.c
===================================================================
--- code/botlib/be_aas_debug.c	(revision 3422)
+++ code/botlib/be_aas_debug.c	(working copy)
@@ -30,6 +30,7 @@
  *****************************************************************************/
 
 #include "../qcommon/q_shared.h"
+#include "../qcommon/surfaceflags.h"
 #include "l_memory.h"
 #include "l_script.h"
 #include "l_precomp.h"
Index: code/botlib/be_aas_def.h
===================================================================
--- code/botlib/be_aas_def.h	(revision 3422)
+++ code/botlib/be_aas_def.h	(working copy)
@@ -29,8 +29,6 @@
  *
  *****************************************************************************/
 
-#include "../qcommon/q_shared.h"
-
 //debugging on
 #define AAS_DEBUG
 
Index: code/botlib/be_aas_entity.c
===================================================================
--- code/botlib/be_aas_entity.c	(revision 3422)
+++ code/botlib/be_aas_entity.c	(working copy)
@@ -45,15 +45,6 @@
 
 #define MASK_SOLID		CONTENTS_PLAYERCLIP
 
-//FIXME: these might change
-enum {
-	ET_GENERAL,
-	ET_PLAYER,
-	ET_ITEM,
-	ET_MISSILE,
-	ET_MOVER
-};
-
 //===========================================================================
 //
 // Parameter:				-
@@ -91,7 +82,6 @@
 	ent->i.flags = state->flags;
 	ent->i.ltime = AAS_Time();
 	VectorCopy(ent->i.origin, ent->i.lastvisorigin);
-	VectorCopy(state->old_origin, ent->i.old_origin);
 	ent->i.solid = state->solid;
 	ent->i.groundent = state->groundent;
 	ent->i.modelindex = state->modelindex;
Index: code/botlib/be_aas_move.c
===================================================================
--- code/botlib/be_aas_move.c	(revision 3422)
+++ code/botlib/be_aas_move.c	(working copy)
@@ -30,6 +30,7 @@
  *****************************************************************************/
 
 #include "../qcommon/q_shared.h"
+#include "../qcommon/surfaceflags.h" // for CONTENTS_WATER, CONTENTS_LAVA, CONTENTS_SLIME etc.
 #include "l_memory.h"
 #include "l_script.h"
 #include "l_precomp.h"
@@ -227,13 +228,13 @@
 // Returns:				-
 // Changes Globals:		-
 //===========================================================================
-static vec3_t VEC_UP			= {0, -1,  0};
-static vec3_t MOVEDIR_UP		= {0,  0,  1};
-static vec3_t VEC_DOWN		= {0, -2,  0};
-static vec3_t MOVEDIR_DOWN	= {0,  0, -1};
-
 void AAS_SetMovedir(vec3_t angles, vec3_t movedir)
 {
+	static vec3_t VEC_UP			= {0, -1,  0};
+	static vec3_t MOVEDIR_UP		= {0,  0,  1};
+	static vec3_t VEC_DOWN		= {0, -2,  0};
+	static vec3_t MOVEDIR_DOWN	= {0,  0, -1};
+
 	if (VectorCompare(angles, VEC_UP))
 	{
 		VectorCopy(MOVEDIR_UP, movedir);
Index: code/botlib/be_aas_reach.c
===================================================================
--- code/botlib/be_aas_reach.c	(revision 3422)
+++ code/botlib/be_aas_reach.c	(working copy)
@@ -30,6 +30,7 @@
  *****************************************************************************/
 
 #include "../qcommon/q_shared.h"
+#include "../qcommon/surfaceflags.h" // for CONTENTS_WATER, CONTENTS_LAVA, CONTENTS_SLIME etc.
 #include "l_log.h"
 #include "l_memory.h"
 #include "l_script.h"
@@ -41,6 +42,7 @@
 #include "be_aas.h"
 #include "be_aas_funcs.h"
 #include "be_aas_def.h"
+#include "be_interface.h"
 
 extern int Sys_MilliSeconds(void);
 
Index: code/botlib/be_ai_goal.c
===================================================================
--- code/botlib/be_ai_goal.c	(revision 3422)
+++ code/botlib/be_ai_goal.c	(working copy)
@@ -88,24 +88,6 @@
 	struct campspot_s *next;
 } campspot_t;
 
-//FIXME: these are game specific
-typedef enum {
-	GT_FFA,				// free for all
-	GT_TOURNAMENT,		// one on one tournament
-	GT_SINGLE_PLAYER,	// single player tournament
-
-	//-- team games go after this --
-
-	GT_TEAM,			// team deathmatch
-	GT_CTF,				// capture the flag
-#ifdef MISSIONPACK
-	GT_1FCTF,
-	GT_OBELISK,
-	GT_HARVESTER,
-#endif
-	GT_MAX_GAME_TYPE
-} gametype_t;
-
 typedef struct levelitem_s
 {
 	int number;							//number of the level item
@@ -1009,10 +991,6 @@
 // Returns:				-
 // Changes Globals:		-
 //===========================================================================
-
-//NOTE: enum entityType_t in bg_public.h
-#define ET_ITEM			2
-
 void BotUpdateEntityItems(void)
 {
 	int ent, i, modelindex;
Index: code/botlib/be_ai_goal.h
===================================================================
--- code/botlib/be_ai_goal.h	(revision 3422)
+++ code/botlib/be_ai_goal.h	(working copy)
@@ -36,6 +36,7 @@
 #define GFL_ITEM				1
 #define GFL_ROAM				2
 #define GFL_DROPPED				4
+#define GFL_AIR					8
 
 //a bot goal
 typedef struct bot_goal_s
Index: code/botlib/be_ai_move.c
===================================================================
--- code/botlib/be_ai_move.c	(revision 3422)
+++ code/botlib/be_ai_move.c	(working copy)
@@ -30,6 +30,7 @@
  *****************************************************************************/
 
 #include "../qcommon/q_shared.h"
+#include "../qcommon/surfaceflags.h" // for CONTENTS_WATER, CONTENTS_LAVA, CONTENTS_SLIME etc.
 #include "l_memory.h"
 #include "l_libvar.h"
 #include "l_utils.h"
@@ -1517,7 +1518,7 @@
 	EA_Move(ms->client, dir, 400);
 	//
 	VectorCopy(dir, result.movedir);
-	Vector2Angles(dir, result.ideal_viewangles);
+	vectoangles(dir, result.ideal_viewangles);
 	result.flags |= MOVERESULT_SWIMVIEW;
 	//
 	return result;
@@ -1548,7 +1549,7 @@
 	//move up if close to the actual out of water jump spot
 	if (dist < 40) EA_MoveUp(ms->client);
 	//set the ideal view angles
-	Vector2Angles(dir, result.ideal_viewangles);
+	vectoangles(dir, result.ideal_viewangles);
 	result.flags |= MOVERESULT_MOVEMENTVIEW;
 	//
 	VectorCopy(dir, result.movedir);
@@ -1582,7 +1583,7 @@
 	//elemantary actions
 	EA_Move(ms->client, dir, 400);
 	//set the ideal view angles
-	Vector2Angles(dir, result.ideal_viewangles);
+	vectoangles(dir, result.ideal_viewangles);
 	result.flags |= MOVERESULT_MOVEMENTVIEW;
 	//
 	VectorCopy(dir, result.movedir);
@@ -1976,7 +1977,7 @@
 		viewdir[0] = dir[0];
 		viewdir[1] = dir[1];
 		viewdir[2] = 3 * dir[2];
-		Vector2Angles(viewdir, result.ideal_viewangles);
+		vectoangles(viewdir, result.ideal_viewangles);
 		//elemantary action
 		EA_Move(ms->client, origin, 0);
 		EA_MoveForward(ms->client);
@@ -2645,7 +2646,7 @@
 		VectorSubtract(reach->end, org, viewdir);
 		//
 		dist = VectorNormalize(dir);
-		Vector2Angles(viewdir, result.ideal_viewangles);
+		vectoangles(viewdir, result.ideal_viewangles);
 		result.flags |= MOVERESULT_MOVEMENTVIEW;
 		//
 		if (dist < 5 &&
@@ -2712,7 +2713,7 @@
 	//
 	dist = VectorNormalize(hordir);
 	//look in the movement direction
-	Vector2Angles(hordir, result.ideal_viewangles);
+	vectoangles(hordir, result.ideal_viewangles);
 	//look straight down
 	result.ideal_viewangles[PITCH] = 90;
 	//
@@ -2739,7 +2740,7 @@
 		EA_Move(ms->client, hordir, speed);
 	} //end else
 	//look in the movement direction
-	Vector2Angles(hordir, result.ideal_viewangles);
+	vectoangles(hordir, result.ideal_viewangles);
 	//look straight down
 	result.ideal_viewangles[PITCH] = 90;
 	//set the view angles directly
@@ -2799,7 +2800,7 @@
 		EA_Move(ms->client, hordir, speed);
 	} //end else
 	//look in the movement direction
-	Vector2Angles(hordir, result.ideal_viewangles);
+	vectoangles(hordir, result.ideal_viewangles);
 	//look straight down
 	result.ideal_viewangles[PITCH] = 90;
 	//set the view angles directly
@@ -2981,7 +2982,7 @@
 	//
 	if (ms->moveflags & MFL_SWIMMING)
 	{
-		Vector2Angles(dir, result.ideal_viewangles);
+		vectoangles(dir, result.ideal_viewangles);
 		result.flags |= MOVERESULT_SWIMVIEW;
 	} //end if
 	//if (!debugline) debugline = botimport.DebugLineCreate();
Index: code/botlib/be_interface.c
===================================================================
--- code/botlib/be_interface.c	(revision 3422)
+++ code/botlib/be_interface.c	(working copy)
@@ -30,9 +30,10 @@
  *****************************************************************************/
 
 #include "../qcommon/q_shared.h"
-#include "l_memory.h"
+#include "../qcommon/surfaceflags.h" // for CONTENTS_WATER, CONTENTS_LAVA, CONTENTS_SLIME etc.
 #include "l_log.h"
 #include "l_libvar.h"
+#include "l_memory.h"
 #include "l_script.h"
 #include "l_precomp.h"
 #include "l_struct.h"
Index: code/botlib/botlib.h
===================================================================
--- code/botlib/botlib.h	(revision 3422)
+++ code/botlib/botlib.h	(working copy)
@@ -152,7 +152,6 @@
 	int		flags;			// entity flags
 	vec3_t	origin;			// origin of the entity
 	vec3_t	angles;			// angles of the model
-	vec3_t	old_origin;		// for lerping
 	vec3_t	mins;			// bounding box minimums
 	vec3_t	maxs;			// bounding box maximums
 	int		groundent;		// ground entity
Index: code/botlib/l_memory.c
===================================================================
--- code/botlib/l_memory.c	(revision 3422)
+++ code/botlib/l_memory.c	(working copy)
@@ -30,6 +30,7 @@
  *****************************************************************************/
 
 #include "../qcommon/q_shared.h"
+#include "../qcommon/qcommon.h"
 #include "botlib.h"
 #include "l_log.h"
 #include "l_memory.h"
Index: code/botlib/l_precomp.c
===================================================================
--- code/botlib/l_precomp.c	(revision 3422)
+++ code/botlib/l_precomp.c	(working copy)
@@ -34,9 +34,6 @@
 
 //#define SCREWUP
 //#define BOTLIB
-//#define QUAKE
-//#define QUAKEC
-//#define MEQCC
 
 #ifdef SCREWUP
 #include <stdio.h>
@@ -54,6 +51,7 @@
 
 #ifdef BOTLIB
 #include "../qcommon/q_shared.h"
+#include "../qcommon/qcommon.h"
 #include "botlib.h"
 #include "be_interface.h"
 #include "l_memory.h"
@@ -62,19 +60,6 @@
 #include "l_log.h"
 #endif //BOTLIB
 
-#ifdef MEQCC
-#include "qcc.h"
-#include "time.h"   //time & ctime
-#include "math.h"   //fabs
-#include "l_memory.h"
-#include "l_script.h"
-#include "l_precomp.h"
-#include "l_log.h"
-
-#define qtrue	true
-#define qfalse	false
-#endif //MEQCC
-
 #ifdef BSPC
 //include files for usage in the BSP Converter
 #include "../bspc/qbsp.h"
@@ -83,9 +68,7 @@
 #include "l_precomp.h"
 #endif //BSPC
 
-#if defined(QUAKE) && !defined(BSPC)
-#include "l_utils.h"
-#endif //QUAKE
+//#define DEBUG_EVAL
 
 #define MAX_DEFINEPARMS			128
 
@@ -129,9 +112,6 @@
 #ifdef BOTLIB
 	botimport.Print(PRT_ERROR, "file %s, line %d: %s\n", source->scriptstack->filename, source->scriptstack->line, text);
 #endif	//BOTLIB
-#ifdef MEQCC
-	printf("error: file %s, line %d: %s\n", source->scriptstack->filename, source->scriptstack->line, text);
-#endif //MEQCC
 #ifdef BSPC
 	Log_Print("error: file %s, line %d: %s\n", source->scriptstack->filename, source->scriptstack->line, text);
 #endif //BSPC
@@ -153,9 +133,6 @@
 #ifdef BOTLIB
 	botimport.Print(PRT_WARNING, "file %s, line %d: %s\n", source->scriptstack->filename, source->scriptstack->line, text);
 #endif //BOTLIB
-#ifdef MEQCC
-	printf("warning: file %s, line %d: %s\n", source->scriptstack->filename, source->scriptstack->line, text);
-#endif //MEQCC
 #ifdef BSPC
 	Log_Print("warning: file %s, line %d: %s\n", source->scriptstack->filename, source->scriptstack->line, text);
 #endif //BSPC
@@ -965,9 +942,6 @@
 	script_t *script;
 	token_t token;
 	char path[MAX_QPATH];
-#ifdef QUAKE
-	foundfile_t file;
-#endif //QUAKE
 
 	if (source->skip > 0) return qtrue;
 	//
@@ -1023,16 +997,8 @@
 		SourceError(source, "#include without file name");
 		return qfalse;
 	} //end else
-#ifdef QUAKE
 	if (!script)
 	{
-		Com_Memset(&file, 0, sizeof(foundfile_t));
-		script = LoadScriptFile(path);
-		if (script) Q_strncpyz(script->filename, path, sizeof(script->filename));
-	} //end if
-#endif //QUAKE
-	if (!script)
-	{
 #ifdef SCREWUP
 		SourceWarning(source, "file %s not found", path);
 		return qtrue;
@@ -2636,8 +2602,6 @@
 	SourceError(source, "unknown precompiler directive %s", token.string);
 	return qfalse;
 } //end of the function PC_ReadDirective
-
-#ifdef QUAKEC
 //============================================================================
 //
 // Parameter:				-
@@ -2644,58 +2608,6 @@
 // Returns:					-
 // Changes Globals:		-
 //============================================================================
-int BuiltinFunction(source_t *source)
-{
-	token_t token;
-
-	if (!PC_ReadSourceToken(source, &token)) return qfalse;
-	if (token.type == TT_NUMBER)
-	{
-		PC_UnreadSourceToken(source, &token);
-		return qtrue;
-	} //end if
-	else
-	{
-		PC_UnreadSourceToken(source, &token);
-		return qfalse;
-	} //end else
-} //end of the function BuiltinFunction
-//============================================================================
-//
-// Parameter:				-
-// Returns:					-
-// Changes Globals:		-
-//============================================================================
-int QuakeCMacro(source_t *source)
-{
-	int i;
-	token_t token;
-
-	if (!PC_ReadSourceToken(source, &token)) return qtrue;
-	if (token.type != TT_NAME)
-	{
-		PC_UnreadSourceToken(source, &token);
-		return qtrue;
-	} //end if
-	//find the precompiler directive
-	for (i = 0; dollardirectives[i].name; i++)
-	{
-		if (!strcmp(dollardirectives[i].name, token.string))
-		{
-			PC_UnreadSourceToken(source, &token);
-			return qfalse;
-		} //end if
-	} //end for
-	PC_UnreadSourceToken(source, &token);
-	return qtrue;
-} //end of the function QuakeCMacro
-#endif //QUAKEC
-//============================================================================
-//
-// Parameter:				-
-// Returns:					-
-// Changes Globals:		-
-//============================================================================
 int PC_ReadToken(source_t *source, token_t *token)
 {
 	define_t *define;
@@ -2706,25 +2618,21 @@
 		//check for precompiler directives
 		if (token->type == TT_PUNCTUATION && *token->string == '#')
 		{
-#ifdef QUAKEC
-			if (!BuiltinFunction(source))
-#endif //QUAKC
+			//read the precompiler directive
+			if (!PC_ReadDirective(source))
 			{
-				//read the precompiler directive
-				if (!PC_ReadDirective(source)) return qfalse;
-				continue;
+				return qfalse;
 			} //end if
+			continue;
 		} //end if
 		if (token->type == TT_PUNCTUATION && *token->string == '$')
 		{
-#ifdef QUAKEC
-			if (!QuakeCMacro(source))
-#endif //QUAKEC
+			//read the precompiler directive
+			if (!PC_ReadDollarDirective(source))
 			{
-				//read the precompiler directive
-				if (!PC_ReadDollarDirective(source)) return qfalse;
-				continue;
+				return qfalse;
 			} //end if
+			continue;
 		} //end if
 		// recursively concatenate strings that are behind each other still resolving defines
 		if (token->type == TT_STRING)
Index: code/botlib/l_script.c
===================================================================
--- code/botlib/l_script.c	(revision 3422)
+++ code/botlib/l_script.c	(working copy)
@@ -31,7 +31,6 @@
 
 //#define SCREWUP
 //#define BOTLIB
-//#define MEQCC
 //#define BSPC
 
 #ifdef SCREWUP
@@ -50,6 +49,7 @@
 #ifdef BOTLIB
 //include files for usage in the bot library
 #include "../qcommon/q_shared.h"
+#include "../qcommon/qcommon.h"
 #include "botlib.h"
 #include "be_interface.h"
 #include "l_script.h"
@@ -58,17 +58,6 @@
 #include "l_libvar.h"
 #endif //BOTLIB
 
-#ifdef MEQCC
-//include files for usage in MrElusive's QuakeC Compiler
-#include "qcc.h"
-#include "l_script.h"
-#include "l_memory.h"
-#include "l_log.h"
-
-#define qtrue	true
-#define qfalse	false
-#endif //MEQCC
-
 #ifdef BSPC
 //include files for usage in the BSP Converter
 #include "../bspc/qbsp.h"
@@ -236,9 +225,6 @@
 #ifdef BOTLIB
 	botimport.Print(PRT_ERROR, "file %s, line %d: %s\n", script->filename, script->line, text);
 #endif //BOTLIB
-#ifdef MEQCC
-	printf("error: file %s, line %d: %s\n", script->filename, script->line, text);
-#endif //MEQCC
 #ifdef BSPC
 	Log_Print("error: file %s, line %d: %s\n", script->filename, script->line, text);
 #endif //BSPC
@@ -262,9 +248,6 @@
 #ifdef BOTLIB
 	botimport.Print(PRT_WARNING, "file %s, line %d: %s\n", script->filename, script->line, text);
 #endif //BOTLIB
-#ifdef MEQCC
-	printf("warning: file %s, line %d: %s\n", script->filename, script->line, text);
-#endif //MEQCC
 #ifdef BSPC
 	Log_Print("warning: file %s, line %d: %s\n", script->filename, script->line, text);
 #endif //BSPC
Index: code/botlib/l_utils.h
===================================================================
--- code/botlib/l_utils.h	(revision 3422)
+++ code/botlib/l_utils.h	(working copy)
@@ -29,6 +29,5 @@
  *
  *****************************************************************************/
 
-#define Vector2Angles(v,a)		vectoangles(v,a)
 #define Maximum(x,y)			(x > y ? x : y)
 #define Minimum(x,y)			(x < y ? x : y)
Index: code/game/ai_dmnet.c
===================================================================
--- code/game/ai_dmnet.c	(revision 3422)
+++ code/game/ai_dmnet.c	(working copy)
@@ -57,9 +57,6 @@
 // for the voice chats
 #include "../../ui/menudef.h"
 
-//goal flag, see ../botlib/be_ai_goal.h for the other GFL_*
-#define GFL_AIR			128
-
 int numnodeswitches;
 char nodeswitch[MAX_NODESWITCHES+1][144];
 
@@ -158,7 +155,7 @@
 	bot_goal_t goal;
 
 	//if the bot needs air
-	if (bs->lastair_time < FloatTime() - 6) {
+	if (bs->lastair_time < FloatTime() - 15) {
 		//
 #ifdef DEBUG
 		//BotAI_Print(PRT_MESSAGE, "going for air\n");
Index: code/game/ai_main.c
===================================================================
--- code/game/ai_main.c	(revision 3422)
+++ code/game/ai_main.c	(working copy)
@@ -1257,7 +1257,7 @@
 	if (bot_interbreed) {
 		trap_BotMutateGoalFuzzyLogic(bs->gs, 1);
 	}
-	// if we kept the bot client
+	// if we kept the bot state
 	if (restart) {
 		BotReadSessionData(bs);
 	}
@@ -1287,6 +1287,7 @@
 		trap_BotEnterChat(bs->cs, bs->client, CHAT_ALL);
 	}
 
+	// free the move state
 	trap_BotFreeMoveState(bs->ms);
 	//free the goal state
 	trap_BotFreeGoalState(bs->gs);
@@ -1525,7 +1526,6 @@
 			} else {
 				VectorCopy(ent->r.currentAngles, state.angles);
 			}
-			VectorCopy(ent->s.origin2, state.old_origin);
 			VectorCopy(ent->r.mins, state.mins);
 			VectorCopy(ent->r.maxs, state.maxs);
 			state.type = ent->s.eType;
Index: code/game/bg_public.h
===================================================================
--- code/game/bg_public.h	(revision 3422)
+++ code/game/bg_public.h	(working copy)
@@ -106,21 +106,6 @@
 #error overflow: (CS_MAX) > MAX_CONFIGSTRINGS
 #endif
 
-typedef enum {
-	GT_FFA,				// free for all
-	GT_TOURNAMENT,		// one on one tournament
-	GT_SINGLE_PLAYER,	// single player ffa
-
-	//-- team games go after this --
-
-	GT_TEAM,			// team deathmatch
-	GT_CTF,				// capture the flag
-	GT_1FCTF,
-	GT_OBELISK,
-	GT_HARVESTER,
-	GT_MAX_GAME_TYPE
-} gametype_t;
-
 typedef enum { GENDER_MALE, GENDER_FEMALE, GENDER_NEUTER } gender_t;
 
 /*
@@ -709,29 +694,7 @@
 #define	MASK_SHOT				(CONTENTS_SOLID|CONTENTS_BODY|CONTENTS_CORPSE)
 
 
-//
-// entityState_t->eType
-//
-typedef enum {
-	ET_GENERAL,
-	ET_PLAYER,
-	ET_ITEM,
-	ET_MISSILE,
-	ET_MOVER,
-	ET_BEAM,
-	ET_PORTAL,
-	ET_SPEAKER,
-	ET_PUSH_TRIGGER,
-	ET_TELEPORT_TRIGGER,
-	ET_INVISIBLE,
-	ET_GRAPPLE,				// grapple hooked on wall
-	ET_TEAM,
-	ET_CORONA,
 
-	ET_EVENTS				// any of the EV_* events can be added freestanding
-							// by setting eType to ET_EVENTS + eventNum
-							// this avoids having to set eFlags and eventNum
-} entityType_t;
 
 
 
Index: code/qcommon/q_shared.h
===================================================================
--- code/qcommon/q_shared.h	(revision 3422)
+++ code/qcommon/q_shared.h	(working copy)
@@ -1340,7 +1340,31 @@
 	float	skinFraction;	// 0 = full health, 1 = dead
 } entityState_t;
 
+//
+// entityState_t->eType
+//
 typedef enum {
+	ET_GENERAL,
+	ET_PLAYER,
+	ET_ITEM,
+	ET_MISSILE,
+	ET_MOVER,
+	ET_BEAM,
+	ET_PORTAL,
+	ET_SPEAKER,
+	ET_PUSH_TRIGGER,
+	ET_TELEPORT_TRIGGER,
+	ET_INVISIBLE,
+	ET_GRAPPLE,				// grapple hooked on wall
+	ET_TEAM,
+	ET_CORONA,
+
+	ET_EVENTS				// any of the EV_* events can be added freestanding
+							// by setting eType to ET_EVENTS + eventNum
+							// this avoids having to set eFlags and eventNum
+} entityType_t;
+
+typedef enum {
 	CA_UNINITIALIZED,
 	CA_DISCONNECTED, 	// not talking to a server
 	CA_CONNECTING,		// sending request packets to the server
@@ -1425,6 +1449,18 @@
 	FLAG_DROPPED
 } flagStatus_t;
 
+typedef enum {
+	GT_SINGLE_PLAYER,	// single player tournament
+	GT_FFA,				// free for all
+	GT_TOURNAMENT,		// one on one tournament
+	//-- team games go after this --
+	GT_TEAM,			// team deathmatch
+	GT_CTF,				// capture the flag
+	GT_1FCTF,
+	GT_OBELISK,
+	GT_HARVESTER,
+	GT_MAX_GAME_TYPE
+} gametype_t;
 
 
 #define	MAX_GLOBAL_SERVERS				4096
